openapi: 3.0.0
info:
  version: 1.0.0
  title: 온품 API
  description: 온품 API 문서입니다
servers:
  - description: Staging Server
    url: 'https://onpoom.kr/api'
  - description: Dev Server
    url: 'http://localhost:8080/api'
paths:
  /user:
    get:
      tags:
        - User
      summary: User Info
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nickname:
                      type: string
                    image:
                      type: string
    delete:
      tags:
        - User
      summary: 회원 탈퇴
      produces:
        - application/json
      responses:
        '204':
          description: 회원 탈퇴 성공
  /user/sign-up:
    post:
      tags:
        - User
      summary: 회원가입
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                nickname:
                  type: string
                  required: true
      responses:
        '200':
          description: successful operation
  /user/sign-in:
    post:
      tags:
        - User
      summary: 이메일 로그인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                appToken:
                  type: string
                  default: 1234567890
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userIdx:
                    type: number
                  nickname:
                    type: string
                  userImage:
                    $ref: '#/components/schemas/Image'
                  token:
                    type: string
                  cart:
                    type: number
                  author:
                    type: boolean
  /user/sns-sign-in:
    post:
      tags:
        - User
      summary: SNS 로그인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
                type:
                  type: integer
                  default: 2
                  required: true
                appToken:
                  type: string
                  default: 1234567890
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userIdx:
                    type: number
                  nickname:
                    type: string
                  userImage:
                    $ref: '#/components/schemas/Image'
                  token:
                    type: string
                  cart:
                    type: number
                  author:
                    type: boolean
  /user/auto-login:
    post:
      tags:
        - User
      summary: 자동 로그인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appToken:
                  type: string
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userIdx:
                    type: number
                  nickname:
                    type: string
                  userImage:
                    $ref: '#/components/schemas/Image'
                  token:
                    type: string
                  cart:
                    type: number
                  author:
                    type: boolean
  /user/check-email:
    post:
      tags:
        - User
      summary: 이메일 중복확인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 사용가능한 이메일 입니다.
          content:
            application/json:
              schema:
                data:
                  type: string;
        '400':
          description: 이메일을 입력해주세요.
          content:
            application/json:
              schema:
                data:
                  type: string;
        '409':
          description: 이미 사용중인 이메일 입니다.
          content:
            application/json:
              schema:
                data:
                  type: string;
  /user/check-nickname:
    post:
      tags:
        - User
      summary: 닉네임 중복확인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
      responses:
        '200':
          description: 사용가능한 닉네임 입니다.
          content:
            application/json:
              schema:
                data:
                  type: string;
        '400':
          description: 닉네임을 입력해주세요.
          content:
            application/json:
              schema:
                data:
                  type: string;
        '409':
          description: 이미 사용중인 닉네임 입니다.
          content:
            application/json:
              schema:
                data:
                  type: string;
  /user/profile:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: 프로필 수정
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                image:
                  type: string
                  format: binary
                reset:
                  type: boolean
                  default: false
      responses:
        '200':
          description: 프로필 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
  /user/check-password:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: 현재 비밀번호 확인
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: 비밀번호 확인 완료
  /user/password:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: 비밀번호 변경
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: 비밀번호 변경 완료
  /user/ask-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - Ask
      summary: 내 ASK 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
  /user/like-product-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 좋아요 상품 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
  /user/like-board-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 좋아요 게시물 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
        - name: category
          in: query
          schema:
            type: number
            enum:
              - 1
              - 2
              - 3
          default: 2
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  subject:
                    type: string
                  content:
                    type: number
                  nickname:
                    type: string
                  isLike:
                    type: boolean
                  likeCount:
                    type: number
                  commentCount:
                    type: number
                  createdAt:
                    type: boolean
                  image:
                    $ref: '#/components/schemas/Image'
  /user/my-board-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내가 쓴 게시물 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
        - name: category
          in: query
          type: number
          schema:
            enum:
              - 1
              - 2
              - 3
              - 4
          default: 2
          required: true
      responses:
        '200':
          description: 내가 쓴 게시글 리스트
  /user/my-comment-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내가 작성할수 있는 리뷰 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
        - name: isWrite
          in: query
          type: boolean
          schema:
            enum:
              - true
              - false
          default: true
          required: true
      responses:
        '200':
          description: 내가 작성가능한 코멘트 리스트
  /user/reply-board-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내가 댓글 단 게시물 목록
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
        - name: category
          in: query
          type: number
          schema:
            enum:
              - 2
              - 3
              - 4
          default: 2
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  content:
                    type: number
                  nickname:
                    type: string
                  isLike:
                    type: boolean
                  likeCount:
                    type: number
                  commentCount:
                    type: number
                  createdAt:
                    type: boolean
                  image:
                    $ref: '#/components/schemas/Image'
  /user/delivery:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 배송지 목록
      responses:
        '200':
          description: 내가 쓴 게시글 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    recipient:
                      type: string
                    hp:
                      type: string
                    zipcode:
                      type: string
                    address1:
                      type: string
                    address2:
                      type: string
                    memo:
                      type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 배송지 저장
      description: 'name = 배송지명(집/회사/기타), hp = 휴대폰번호, zipcode = 우편번호, address1 = 주소, address2 = 상세주소, memo = 배송메모'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                recipient:
                  type: string
                hp:
                  type: string
                zipcode:
                  type: string
                address1:
                  type: string
                address2:
                  type: string
                memo:
                  type: string
      responses:
        '200':
          description: 내가 쓴 게시글 리스트
  /user/point:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 포인트
      responses:
        '200':
          description: 내 포인트
          content:
            application/json:
              schema:
                type: number
  /user/my-point-list:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
      tags:
        - My
      summary: 내 포인트 목록
      responses:
        '200':
          description: 내 포인트 목록 조회성공
  /user/my-push-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 푸시 히스토리
      parameters:
        - name: page
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: 내 푸시 히스토리 조회성공
  /user/my-push-count:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 내 안읽은 알람수
      responses:
        '200':
          description: 내 안읽은 알람수
  /user/my-count-info:
    get:
      security:
        - bearerAuth: []
      tags:
        - My
      summary: 마이페이지 정보 표기
      responses:
        '200':
          description: 정보표기성공
  /user/blind:
    post:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: 유저차단
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
      responses:
        '201':
          description: 차단 완료
  /user/mail:
    get:
      tags:
        - User
      summary: 메일보내기
      responses:
        '200':
          description: 메일보내기
  /user/push:
    put:
      security:
        - bearerAuth: []
      tags:
        - User
      summary: 푸시 상태 변경
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: number
                  default: 1
      responses:
        '200':
          description: 푸시 상태 변경 완료
  /user/test:
    get:
      tags:
        - User
      summary: 테스트
      responses:
        '200':
          description: 테스트
  /search/keyword-list:
    get:
      tags:
        - Search
      summary: '검색어 목록 (최근, 인기)'
      produces:
        - application/json
      responses:
        '200':
          description: '검색어 목록 (최근, 인기) 조회 성공'
  /search/keyword:
    delete:
      tags:
        - Search
      summary: 검색어 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          description: 'all = 모두지우기 , 숫자인경우 하나씩'
          type: number
          required: true
      responses:
        '200':
          description: '검색어 목록 (최근, 인기) 조회 성공'
  /search/list:
    get:
      tags:
        - Search
      summary: 통합 검색 목록
      produces:
        - application/json
      parameters:
        - name: keyword
          in: query
          schema:
            type: string
          default: 나는
          required: true
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - like
              - recently
              - review
              - price
          required: true
        - name: type
          in: query
          schema:
            type: string
            enum:
              - product
              - with
              - article
          required: true
        - name: page
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: 통합 검색 성공
  /product:
    get:
      tags:
        - Product
      summary: 요청한 idx 상품 정보를 가져옵니다.
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: integer
          format: int64
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    post:
      security:
        - bearerAuth: []
      tags:
        - Product
      summary: 상품을 등록합니다.
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                category:
                  schema:
                    type: integer
                    enum:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                  required: true
                price:
                  type: number
                  required: true
                stock:
                  type: boolean
                  required: true
                  default: false
                amount:
                  type: number
                description:
                  type: string
                  required: true
                material:
                  type: string
                  required: true
                  default: 소재
                purpose:
                  type: string
                  required: true
                  default: 목적
                image:
                  type: string
                  format: binary
                  required: true
                isShow:
                  type: boolean
                  required: true
                  default: true
                isSell:
                  type: boolean
                  required: true
                  default: true
                deliveryType:
                  schema:
                    type: number
                    enum:
                      - 1
                      - 2
                      - 3
                  required: true
                  default: 2
                deliveryFee:
                  type: number
                  required: true
                  default: 3000
                deliveryFee2:
                  type: number
                  required: true
                  default: 3000
                deliveryFee3:
                  type: number
                  required: true
                  default: 3000
                author_idx:
                  type: number
      responses:
        '200':
          description: successful operation
  /product/list:
    get:
      tags:
        - Product
      summary: 상품 리스트를 가져옵니다.
      produces:
        - application/json
      parameters:
        - name: category
          in: query
          schema:
            type: number
            enum:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
          default: 1
          required: true
        - name: page
          in: query
          type: number
          default: 1
          required: false
        - name: filter
          in: query
          type: string
          enum:
            - like
            - recently
            - review
            - price
          default: like
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductList'
                  total:
                    type: number
  /product/trend:
    get:
      tags:
        - Home
      summary: 트렌드 상품 리스트를 가져옵니다.
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    name:
                      'type:': string
                    authorName:
                      type: string
                    isNew:
                      type: boolean
                    image:
                      $ref: '#/components/schemas/Image'
  /product/recommend:
    get:
      tags:
        - Home
      summary: 추천 상품 리스트를 가져옵니다.
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    name:
                      'type:': string
                    price:
                      type: number
                    authorName:
                      type: string
                    image:
                      $ref: '#/components/schemas/Image'
  /product/today:
    get:
      tags:
        - Home
      summary: Today 상품 리스트를 가져옵니다.
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    name:
                      'type:': string
                    price:
                      type: number
                    authorName:
                      type: string
                    image:
                      $ref: '#/components/schemas/Image'
  /product/new:
    get:
      tags:
        - Home
      summary: New 상품 리스트를 가져옵니다.
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    name:
                      'type:': string
                    image:
                      $ref: '#/components/schemas/Image'
  /product/popular:
    get:
      tags:
        - Home
      summary: popular 상품 리스트를 가져옵니다.
      produces:
        - application/json
      parameters:
        - name: category
          in: query
          schema:
            type: number
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
          default: 1
          required: true
      responses:
        '200':
          description: 인기 상품 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    name:
                      'type:': string
                    image:
                      $ref: '#/components/schemas/Image'
  /product/like:
    post:
      security:
        - bearerAuth: []
      tags:
        - Product
      summary: '상품 좋아요 표시를 적용, 삭제 합니다.'
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productIdx:
                  type: integer
                  format: int64
                  default: 1
                  required: true
                isLike:
                  type: boolean
                  default: true
                  required: true
      responses:
        '200':
          description: 성공적으로 처리되었습니다.
        '400':
          description: 좋아요 선택 값 없음.
        '404':
          description: 유저를 찾을 수 없습니다.
  /product/ask:
    post:
      security:
        - bearerAuth: []
      tags:
        - Ask
      summary: 상품 ASK 작성
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                content:
                  type: string
                  default: 문의 내용입니다.
                  required: true
      responses:
        '200':
          description: ASK 작성 되었습니다.
  /cart:
    get:
      security:
        - bearerAuth: []
      tags:
        - Cart
      summary: 장바구니 목록
      produces:
        - application/json
      responses:
        '200':
          description: 장바구니 목록 불러오기 성공 없으면 빈 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    amount:
                      type: number
                    productIdx:
                      type: number
                    productName:
                      type: string
                    image:
                      $ref: '#/components/schemas/Image'
                    price:
                      type: number
                    authorIdx:
                      type: number
                    authorName:
                      type: string
    post:
      security:
        - bearerAuth: []
      tags:
        - Cart
      summary: 장바구니 추가
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productIdx:
                  type: number
                  default: 1
                  required: true
                amount:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: 성공적으로 처리되었습니다.
    put:
      security:
        - bearerAuth: []
      tags:
        - Cart
      summary: 장바구니 수정
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                amount:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: 장바구니 수정
    delete:
      security:
        - bearerAuth: []
      tags:
        - Cart
      summary: 장바구니 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: 장바구니 목록 불러오기 성공 없으면 빈 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    amount:
                      type: number
                    productIdx:
                      type: number
                    productName:
                      type: string
                    image:
                      $ref: '#/components/schemas/Image'
                    price:
                      type: number
                    authorIdx:
                      type: number
                    authorName:
                      type: string
  /cart/temp:
    post:
      security:
        - bearerAuth: []
      tags:
        - Cart
      summary: 바로주문
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productIdx:
                  type: number
                  default: 1
                  required: true
                amount:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: 장바구니 목록 불러오기 성공 없으면 빈 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    amount:
                      type: number
                    productIdx:
                      type: number
                    productName:
                      type: string
                    image:
                      $ref: '#/components/schemas/Image'
                    price:
                      type: number
                    authorIdx:
                      type: number
                    authorName:
                      type: string
  /cart/delivery:
    get:
      tags:
        - Cart
      summary: 배달정보
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          description: 카트 IDX
          required: true
          schema:
            type: number
          default: 1
      responses:
        '200':
          description: 배송현황
        '400':
          description: 배송오류
  /order:
    get:
      tags:
        - Order
      summary: 주문 관리 목록
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: number
          default: 1
      responses:
        '200':
          description: 목록 조회 성공
    post:
      tags:
        - Order
      summary: 주문하기
      produces:
        - application/json
      description: 'idxs = 카트IDX배열, price=아임포트 결제액, point=포인트사용액, coupon=couponIDX, delivery=배송비총합, imp=아임포트영수증번호'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idxs:
                  type: array
                  items:
                    type: number
                  default:
                    - 1
                    - 2
                price:
                  type: number
                  default: 0
                recipient:
                  type: string
                  default: 디몬이
                hp:
                  type: string
                  default: '01000000000'
                pay:
                  type: string
                  default: card
                point:
                  type: number
                  default: 0
                coupon:
                  type: number
                  default: 1
                delivery:
                  type: number
                  default: 3000
                zipcode:
                  type: string
                  default: 58342
                address1:
                  type: string
                  default: 부산 광역시
                address2:
                  type: string
                  default: 디몬스터
                memo:
                  type: string
                  default: 배송메모
                imp:
                  type: string
                  default: onpoom-101010
      responses:
        '200':
          description: 상품 주문 완료.
  /order/list:
    get:
      tags:
        - Order
      summary: 주문목록
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: number
          default: 1
      produces:
        - application/json
      responses:
        '200':
          description: 목록 조회 성공
  /order/detail:
    get:
      tags:
        - Order
      summary: 주문 상세
      produces:
        - application/json
      parameters:
        - name: cartIdx
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: number
          default: 1
      responses:
        '200':
          description: 송장번호 입력완료.
  /order/delivery:
    post:
      tags:
        - Order
      summary: 상품 송장번호 입력
      produces:
        - application/json
      description: '상품 송장번호를 입력합니다. idx = cart.idx , company= 스마트 API 참조 택배사 고유번호 ex ) 04 = 대한통운'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                company:
                  type: string
                  default: '04'
                number:
                  type: string
                  default: '123123123'
      responses:
        '200':
          description: 송장번호 입력완료.
  /order/confirm:
    post:
      tags:
        - Order
      summary: 구매 확정
      produces:
        - application/json
      description: cartIdx를 입력하세요. 구매확정
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
      responses:
        '200':
          description: 구매확정 완료.
  /order/cancel:
    post:
      tags:
        - Order
      summary: 취소 요청
      produces:
        - application/json
      description: cartIdx를 입력하세요. 취소
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                reason:
                  type: string
                  default: 사유입력
                  required: true
      responses:
        '200':
          description: 반품요청 완료.
  /order/exchange:
    post:
      tags:
        - Order
      summary: 교환 요청
      produces:
        - application/json
      description: cartIdx를 입력하세요. 교환요청
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: 교환요청 완료.
  /order/refund:
    post:
      tags:
        - Order
      summary: 반품 요청
      produces:
        - application/json
      description: cartIdx를 입력하세요. 반품요청
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: 반품요청 완료.
  /comment:
    get:
      tags:
        - Comment
      summary: 코멘트 목록
      produces:
        - application/json
      parameters:
        - name: productIdx
          in: query
          schema:
            type: number
          default: '1'
        - name: page
          in: query
          schema:
            type: number
          default: '1'
        - name: hasImage
          in: query
          schema:
            type: boolean
          default: 'false'
      responses:
        '200':
          description: 코멘트 목록 조회 성공.
    post:
      tags:
        - Comment
      summary: 코멘트 남기기
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                cartIdx:
                  type: number
                  default: 1
                content:
                  type: string
                  default: 코멘트 남기기
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                    required: true
      responses:
        '200':
          description: 코멘트 작성 완료.
    delete:
      tags:
        - Comment
      summary: 코멘트 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: '1'
      responses:
        '204':
          description: 코멘트 삭제 성공.
  /exhibition:
    get:
      tags:
        - Exhibition
      summary: 기획전 상세
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: 기획전 상세 조회
  /exhibition/list:
    get:
      tags:
        - Exhibition
      summary: 기획전 목록
      produces:
        - application/json
      responses:
        '200':
          description: 기획전 목록 조회 성공
  /coupon/list:
    get:
      security:
        - bearerAuth: []
      tags:
        - Coupon
      summary: 쿠폰 목록
      parameters:
        - name: productIdxs
          in: query
          type: string
          description: '1,2,3,4'
      produces:
        - application/json
      responses:
        '200':
          description: 쿠폰 목록 불러오기 성공 없으면 빈 배열
  /coupon/management-list:
    get:
      security:
        - bearerAuth: []
      tags:
        - Coupon
      summary: 쿠폰 목록
      parameters:
        - name: page
          in: query
          type: number
          description: '1,2,3,4'
        - name: state
          in: query
          schema:
            type: string
            enum:
              - available
              - unavailable
              - end
        - name: start
          in: query
          type: string
          default: '2022-09-01'
        - name: end
          in: query
          type: string
          default: '2022-09-30'
        - name: keyword
          in: query
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: 쿠폰 목록 불러오기 성공 없으면 빈 배열
  /board/like:
    post:
      tags:
        - Board
      summary: 게시글 좋아요
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                isLike:
                  type: boolean
                  default: true
                  required: true
      responses:
        '200':
          description: 게시글 좋아요 / 좋아요 삭제 완료
  /board/article-list:
    get:
      tags:
        - Article
      summary: 아티클 리스트
      produces:
        - application/json
      responses:
        '200':
          description: 아티클리스트 목록
  /board/article:
    get:
      tags:
        - Article
      summary: 아티클 상세
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: 아티클 상세
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      idx:
                        type: number
                      subject:
                        type: string
                      title:
                        type: string
                      content:
                        type: string
                      authorName:
                        type: string
                      authorImage:
                        $ref: '#/components/schemas/Image'
                      isLike:
                        type: boolean
                      likeCount:
                        type: number
                      tags:
                        type: array
                        items:
                          type: string
                      images:
                        type: array
                        items:
                          $ref: '#/components/schemas/Image'
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            idx:
                              type: number
                            name:
                              type: string
                            authorName:
                              type: string
                            price:
                              type: number
                            image:
                              $ref: '#/components/schemas/Image'
                  related:
                    type: array
                    items:
                      type: object
                      properties:
                        idx:
                          type: number
                        title:
                          type: string
                        authorName:
                          type: string
                        image:
                          $ref: '#/components/schemas/Image'
    post:
      tags:
        - Article
      summary: 아티클 작성
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                subject:
                  default: Magazine
                  schema:
                    type: string
                    enum:
                      - 매거진
                      - 기획전
                      - 인터뷰
                tags:
                  type: string
                  default: '태그1,태그2'
                title:
                  type: string
                  default: 제목 입니다.
                  required: true
                content:
                  type: string
                  default: 내용입니다.
                  required: true
                products:
                  type: string
                  default: '1,2,3'
                  required: true
                banner:
                  type: string
                  format: binary
                  required: true
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                    required: true
      responses:
        '200':
          description: 작성완료
  /board/qna-list:
    get:
      tags:
        - Board
      summary: QNA 리스트
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: number
          default: 1
        - name: filter
          in: query
          description: '필터 like=인기순, recently=최신순'
          required: false
          schema:
            type: string
            enum:
              - like
              - recently
          default: like
      responses:
        '200':
          description: 게시글 리스트 조회 성공
  /board/qna:
    get:
      tags:
        - Board
      summary: QNA 조회
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: 게시글 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  content:
                    type: string
                  userIdx:
                    type: number
                  nickname:
                    type: string
                  userImage:
                    $ref: '#/components/schemas/Image'
                  createdAt:
                    type: string
                    format: date-time
    post:
      tags:
        - Board
      summary: QNA 작성
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: 제목입니다
                  required: true
                content:
                  type: string
                  default: 내용입니다
                  required: true
      responses:
        '200':
          description: 게시글 작성 성공
    put:
      tags:
        - Board
      summary: QNA 수정
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                title:
                  type: string
                  default: 제목입니다
                  required: true
                content:
                  type: string
                  default: 내용입니다
                  required: true
      responses:
        '200':
          description: 게시글 작성 성공
    delete:
      tags:
        - Board
      summary: QNA 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: 게시글 삭제 성공
  /board/story-list:
    get:
      tags:
        - Board
      summary: Story 리스트
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          type: number
          default: 1
        - name: filter
          in: query
          description: 필터
          required: false
          schema:
            type: string
            enum:
              - like
              - recently
          default: like
      responses:
        '200':
          description: 게시글 리스트 조회 성공
        '400':
          description: 빠진 값이 있습니다.
        '401':
          description: 권한 문제
        '404':
          description: 값을 찾을수 없습니다.
  /board/story:
    get:
      tags:
        - Board
      summary: Story 조회
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: Story 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  content:
                    type: string
                  userIdx:
                    type: number
                  nickname:
                    type: string
                  userImage:
                    $ref: '#/components/schemas/Image'
                  images:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
                  createdAt:
                    type: string
                    format: date-time
    post:
      tags:
        - Board
      summary: Story 작성
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: 제목입니다
                  required: true
                content:
                  type: string
                  default: 내용입니다
                  required: true
                tags:
                  type: string
                  default: '태그1,태그2'
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                    required: true
    put:
      tags:
        - Board
      summary: Story 수정
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: '1'
                  required: true
                title:
                  type: string
                  default: 제목입니다
                  required: true
                content:
                  type: string
                  default: 내용입니다
                  required: true
                tags:
                  type: string
                  default: '태그1,태그2'
                imageIdxs:
                  type: string
                  default: '1,2'
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                    required: true
      responses:
        '200':
          description: 게시글 작성 성공
    delete:
      tags:
        - Board
      summary: Story 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: Story 삭제 성공
  /board/abtest-list:
    get:
      tags:
        - Board
      summary: ABTEST 리스트
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: 페이지 번호
          required: false
          schema:
            type: number
          default: 1
      responses:
        '200':
          description: 게시글 리스트 조회 성공
        '400':
          description: 빠진 값이 있습니다.
        '401':
          description: 권한 문제
        '404':
          description: 값을 찾을수 없습니다.
  /board/abtest:
    get:
      tags:
        - Board
      summary: ABTEST 조회
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: 게시글 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  content:
                    type: string
                  commentCount:
                    type: number
                  deadline:
                    type: string
                    format: date
                  winner:
                    type: number
                  createdAt:
                    type: string
                    format: date-time
                  user:
                    type: object
                    properties:
                      idx:
                        type: number
                      nickname:
                        type: string
                      image:
                        $ref: '#/components/schemas/Image'
                  abteset:
                    type: object
                    properties:
                      select:
                        type: number
                      typeA:
                        $ref: '#/components/schemas/Image'
                      aCount:
                        type: number
                      typeB:
                        $ref: '#/components/schemas/Image'
                      bCount:
                        type: number
    post:
      tags:
        - Board
      summary: ABTEST 작성
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  default: 내용입니다
                  required: true
                deadline:
                  type: string
                  format: date
                  required: true
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                    required: true
      responses:
        '200':
          description: ABTEST 작성 완료
    put:
      tags:
        - Board
      summary: ABTEST 수정
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  required: true
                content:
                  type: string
                  default: 내용입니다
                  required: true
      responses:
        '200':
          description: ABTEST 작성 수정
    delete:
      tags:
        - Board
      summary: ABTEST 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          schema:
            type: number
          default: 1
          required: true
      responses:
        '200':
          description: ABTEST 삭제 성공
  /board/vote:
    post:
      tags:
        - Board
      summary: ABTEST 투표
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  default: 1
                  required: true
                selected:
                  type: number
                  default: 1
                  required: true
      responses:
        '200':
          description: ABTEST 조회
    delete:
      tags:
        - Board
      summary: ABTEST 투표 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          description: 게시글 번호 board.idx
          required: false
          type: number
          default: 1
      responses:
        '200':
          description: ABTEST 투표 내역 삭제
  /board/reply:
    get:
      tags:
        - Reply
      summary: 댓글 리스트
      produces:
        - application/json
      parameters:
        - name: boardIdx
          in: query
          description: 게시물 번호
          required: false
          type: number
          default: 1
      responses:
        '200':
          description: 댓글 리스트 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    content:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                    deletedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        idx:
                          type: number
                        nickname:
                          type: string
                        image:
                          $ref: '#/components/schemas/Image'
                    re:
                      tpye: array
                      items:
                        type: object
                        properties:
                          idx:
                            type: number
                          content:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          deletedAt:
                            type: string
                            format: date-time
                          user:
                            type: object
                            properties:
                              idx:
                                type: number
                              nickname:
                                type: string
                              image:
                                $ref: '#/components/schemas/Image'
    post:
      tags:
        - Reply
      summary: 댓글 작성
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                boardIdx:
                  type: number
                  default: 1
                  required: true
                content:
                  type: string
                  default: 댓글입니다.
                  required: true
                reIdx:
                  type: number
      responses:
        '200':
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/paths/~1board~1reply/get/responses/200/content/application~1json/schema'
    delete:
      tags:
        - Reply
      summary: 댓글 삭제
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          description: '댓글, 대댓글 번호'
          required: true
          type: number
          default: 1
      responses:
        '200':
          description: 댓글 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/paths/~1board~1reply/get/responses/200/content/application~1json/schema'
  /board/main-article:
    get:
      tags:
        - Home
      summary: main Article 리스트
      produces:
        - application/json
      responses:
        '200':
          description: main Article 리스트 조회 성공
  /board/with-talk:
    get:
      tags:
        - Home
      summary: with Talk 리스트
      produces:
        - application/json
      responses:
        '200':
          description: with Talk 리스트 조회 성공
  /board/hot-story:
    get:
      tags:
        - Home
      summary: hot story 리스트
      produces:
        - application/json
      responses:
        '200':
          description: hot story 리스트 조회 성공
  /board/hot-talk:
    get:
      tags:
        - Home
      summary: hot talk 리스트
      produces:
        - application/json
      responses:
        '200':
          description: hot talk 리스트 조회 성공
  /author:
    get:
      tags:
        - Author
      summary: 작가 정보
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: string
                  name:
                    type: string
                  studio:
                    type: string
                  greetings:
                    type: string
                  productCount:
                    type: number
                  articleCount:
                    type: number
                  major:
                    type: string
                  record:
                    type: array
                    items:
                      type: object
                      properties:
                        year:
                          type: string
                        content:
                          type: string
                  exhibition:
                    type: array
                    items:
                      type: object
                      properties:
                        year:
                          type: string
                        content:
                          type: string
    post:
      tags:
        - Author
      summary: 작가 회원가입 신청.
      produces:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                name:
                  type: string
                  required: true
                greetings:
                  type: string
                  required: true
                studio:
                  type: string
                  required: true
                tel:
                  type: string
                  required: true
                major:
                  type: string
                  required: true
                zipcode:
                  type: string
                  required: true
                address1:
                  type: string
                  required: true
                address2:
                  type: string
                  required: true
                business_num:
                  type: string
                  required: true
                profile:
                  type: string
                  format: binary
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                data:
                  type: string
  /author/product-list:
    get:
      tags:
        - Author
      summary: 작가 상품 리스트
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - like
              - recently
              - review
              - price
          default: like
          required: true
        - name: page
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductList'
  /author/article-list:
    get:
      tags:
        - Author
      summary: 작가 아티클 리스트
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
        - name: filter
          in: query
          schema:
            type: string
            enum:
              - like
              - recently
          default: like
          required: true
        - name: page
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                  data:
                    type: array
  /author/pass:
    put:
      tags:
        - Author
      summary: 작가 승인.
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: integer
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                data:
                  type: string
  /author/today:
    get:
      tags:
        - Home
      summary: Today Author
      produces:
        - application/json
      responses:
        '200':
          description: 오늘의 작가
  /author/ask:
    post:
      tags:
        - Author
      summary: 작가 ASK 답변
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idx:
                  type: number
                  required: true
                content:
                  type: string
                  required: true
      responses:
        '200':
          description: 작가 ASK 문의 답변
          content:
            application/json:
              schema:
                data:
                  type: string
  /report:
    post:
      security:
        - bearerAuth: []
      tags:
        - Report
      summary: 신고 작성
      description: 'type = board , reply'
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  default: board
                  required: true
                idx:
                  type: number
                  default: 1
                  required: true
                reason:
                  type: string
                  default: 신고합니다.
                  required: true
      responses:
        '200':
          description: 신고 되었습니다.
  /setting/terms:
    get:
      tags:
        - Setting
      summary: 약관 불러오기
      description: 'type use=''이용약관'' , privacy=''개인정보취급방침'', marketing=''마케팅활용동의'', exit=''탈퇴약관'''
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: 약관 타입
          required: true
          type: string
          schema:
            type: string
            enum:
              - use
              - privacy
              - marketing
              - exit
      responses:
        '200':
          description: 약관 조회 성공
          content:
            application/json:
              schema:
                data: null
                type: string
  /setting/notice-list:
    get:
      tags:
        - Setting
      summary: 공지사항 목록
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          type: number
          description: 페이지
          default: 1
          required: true
      responses:
        '200':
          description: 공지사항 목록 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    title:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: Date
  /setting/notice:
    get:
      tags:
        - Setting
      summary: 공지사항 상세
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: 공지사항 상세 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: Date
    post:
      tags:
        - Setting
      summary: 공지사항 작성
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: 제목입니다.
                  required: true
                content:
                  type: string
                  default: 내용입니다.
                  required: true
      responses:
        '201':
          description: 공지사항 작성 성공
  /setting/faq-list:
    get:
      tags:
        - Setting
      summary: FAQ 목록
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          type: number
          description: 페이지
          default: 1
          required: true
      responses:
        '200':
          description: FAQ 목록 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                    title:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: Date
  /setting/faq:
    get:
      tags:
        - Setting
      summary: FAQ 상세
      produces:
        - application/json
      parameters:
        - name: idx
          in: query
          type: number
          default: 1
          required: true
      responses:
        '200':
          description: FAQ 상세 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                  title:
                    type: string
                  content:
                    type: string
                  createdAt:
                    type: Date
    post:
      tags:
        - Setting
      summary: FAQ 작성
      produces:
        - application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: 제목입니다.
                  required: true
                content:
                  type: string
                  default: 내용입니다.
                  required: true
      responses:
        '201':
          description: FAQ 작성 성공
  /image/product-image:
    post:
      security:
        - bearerAuth: []
      tags:
        - Image
      summary: 상품 이미지를 생성합니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: base64
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: integer
                  name:
                    type: string
                  width:
                    type: integer
                  height:
                    type: integer
  /image/banner:
    post:
      security:
        - bearerAuth: []
      tags:
        - Image
      summary: 상품 이미지를 생성합니다.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: base64
                  required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: integer
                  name:
                    type: string
                  width:
                    type: integer
                  height:
                    type: integer
tags:
  - name: User
    description: 유저 관련 API
  - name: Product
    description: 상품 관련 API
  - name: Home
    description: 홈화면 관련 API
  - name: Cart
    description: 장바구니 관련 API
  - name: Order
    description: 주문 관련 API
  - name: Comment
    description: 코멘트 관련 API
  - name: Board
    description: 게시글 관련 API
  - name: Reply
    description: 댓글 관련 API
  - name: Author
    description: 작가 관련 API
  - name: Search
    description: 검색 관련 API
  - name: My
    description: 나의 정보 관련 API
  - name: Report
    description: 신고 관련 API
  - name: Coupon
    description: 쿠폰 관련 API
  - name: Ask
    description: ASK 관련 API
  - name: Setting
    description: 설정 관련 API
  - name: Image
    description: 이미지 관련 API
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Bearer authentication
  schemas:
    User:
      type: object
      properties:
        idx:
          type: integer
        uuis:
          type: string
          format: uuid
        type:
          type: integer
        id:
          type: string
        nickname:
          type: string
        hp:
          type: string
        profile_img:
          type: string
        author:
          type: object
    Product:
      type: object
      properties:
        idx:
          type: number
        category:
          type: number
          description: '1=도자공예, 2=유리공예, 3=금속공예, 4=목공예, 5=섬유공예, 6=가죽공예, 7=기능공예'
        name:
          type: string
        price:
          type: number
        minPrice:
          type: number
          description: 조건 가격
        deliveryType:
          type: number
          description: '1=무료배송, 2=조건부배송, 3=유료배송'
        isShow:
          type: boolean
          description: 상품 노출 여부
        isSell:
          type: boolean
          description: 상품 판매 여부
        isNew:
          type: boolean
          description: 상품 신상 여부
        stock:
          oneOf:
            - type: number
            - type: null
          description: '상품 재고 null=무제한 , 0=재고 없음, 0<재고 있음'
        likeCount:
          type: number
          description: 상품 좋아요 수
        isLike:
          type: boolean
          description: 좋아요 여부
        material:
          type: string
          description: 상품 재질
        purpose:
          type: string
          description: 상품 용도
        description:
          type: string
          description: 상품 상세 내용
        image:
          $ref: '#/components/schemas/Image'
        author:
          type: object
          properties:
            idx:
              type: integer
            name:
              type: string
            greetings:
              type: string
            image:
              $ref: '#/components/schemas/Image'
    ProductList:
      type: object
      properties:
        idx:
          type: number
        category:
          type: number
          description: '1=도자공예, 2=유리공예, 3=금속공예, 4=목공예, 5=섬유공예, 6=가죽공예, 7=기능공예'
        name:
          type: string
        price:
          type: number
        isShow:
          type: boolean
          description: 상품 노출 여부
        isSell:
          type: boolean
          description: 상품 판매 여부
        isNew:
          type: boolean
          description: 상품 신상 여부
        stock:
          oneOf:
            - type: number
            - type: null
          description: '상품 재고 null=무제한 , 0=재고 없음, 0<재고 있음'
        likeCount:
          type: number
          description: 상품 좋아요 수
        reviewCount:
          type: number
          description: 상품 리뷰 수
        authorName:
          type: string
          description: 작가 이름
        isLike:
          type: boolean
          description: 좋아요 여부
        image:
          $ref: '#/components/schemas/Image'
    Image:
      type: object
      properties:
        idx:
          type: integer
        url:
          type: string
        thumbnail:
          type: string
        width:
          type: integer
        height:
          type: integer
security:
  - bearerAuth: []
